<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- enable use-expressions -->
    
    <http auto-config="true" use-expressions="true" create-session="always">
		
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/userprofile" access="hasRole('ROLE_USER')" />
		
        <!-- access denied page -->
        <access-denied-handler error-page="/403" />
		
        <form-login 
            login-page="/login" 
            authentication-success-handler-ref="myAuthenticationSuccessHandler"
            authentication-failure-url="/login?error" 
            username-parameter="username"
            password-parameter="password" 
            login-processing-url="/login"
        />
		
        <!--        <session-management session-fixation-protection="migrateSession" invalid-session-url="/login" >
            <concurrency-control max-sessions="2" /> 
        </session-management>-->
        
        
        <logout   invalidate-session="true" delete-cookies="JSESSIONID"   logout-url="/logout"/>
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1" expired-url="/login"/>
        </session-management>
       
        
               
        <remember-me data-source-ref="dataSource" token-validity-seconds="86400" remember-me-parameter="remember-me" user-service-ref="customUserDetailsService"/>

        <!-- enable csrf protection -->
        <csrf/>
    </http>
    <beans:bean id="customLogout" class="com.sharmila.hibernatespringsecurity.authentication.customLogout">
    </beans:bean>
 
    
    <beans:bean id="myAuthenticationSuccessHandler" class="com.sharmila.hibernatespringsecurity.authentication.MyAuthenticationSuccessHandler">
        
    </beans:bean>
    
    <!--    <beans:bean id="rememberMeAuthenticationProvider" class=
  "org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:constructor-arg value="myAppKey" />
        <beans:constructor-arg ref="jdbcTokenRepository" />
        <beans:constructor-arg ref="customUserDetailsService" />
    </beans:bean>
    <beans:bean id="jdbcTokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"> 
        <beans:property name="createTableOnStartup" value="false" /> 
        <beans:property name="dataSource" ref="dataSource" /> 
    </beans:bean>
    -->
    
    <beans:bean id="customUserDetailsService" class="com.sharmila.hibernatespringsecurity.service.CustomUserDetailsService">
    
    </beans:bean>
    <beans:bean id="savedRequestAwareAuthenticationSuccessHandler"
                class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="targetUrlParameter" value="targetUrl" />
        
    </beans:bean>
    
    
    <beans:bean id="userDetailsDao" class="com.sharmila.hibernatespringsecurity.dao.impl.UserDetailsDaoImpl" >
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
	
    <beans:bean id="authenticationProvider"
                class="com.sharmila.hibernatespringsecurity.authentication.LimitLoginAttemptAuthenticationProvider">
        <!--        <beans:property name="userDetailsService" ref="customUserDetailsService" />-->
        <beans:property name="userDetailsDao" ref="userDetailsDao" />
        
    </beans:bean>
    
    
    
       
    <!-- Select users and user_roles from database -->
    <authentication-manager >
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>

</beans:beans>